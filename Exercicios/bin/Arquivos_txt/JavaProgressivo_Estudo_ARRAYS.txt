-------- ARRAYS - www.javaprogressivo.net ----------

---- DECLARANDO ARRAYS EM JAVA
	Sintaxe: 
		tipo[] nome_do_array = new tipo[numero_de_elementos];
		ou
		tipo[] nome_do_array = {valor1, valor2, ..., valorn};
		
	Obs: Quando o array é iniciado sem informação, é automaticamente preenchido com 0.

	Saber tamanho do array:
		nomeArray.lenght
	
	Utilizando um valor específico:
		nota[10] = 10.0;
		float media = (nota[3]+nota[2])/2;
		nota[5]++;

	Exemplo de código:
	import java.util.Scanner;

	public class arrayTeste {
    
		public static void main(String[] args){
            int[] nota = new int[3];
            Scanner entrada = new Scanner(System.in);
            
            //recebendo os números
            for(int indice=0 ; indice < 3 ; indice++){
                System.out.print("\nEntre com o número " + (indice+1) + ": ");
                nota[indice] = entrada.nextInt();
            }
            
            //exibindo os números
            for(int indice=0 ; indice < 3 ; indice++){
                System.out.printf("Número %d -> Valor armazenado: %d\n",indice+1, nota[indice]);
            }
        }


	}
	
	
---- PERCORRENDO O ARRAY EM JAVA (5 PRA CIMA) - FOR EACH

	Sintaxe:
		for (tipo variavel_do_tipo_do_seuArray : seuArray){
			//código
		}
		
		Ex: array de int -> for (int count : arrayInteiros){}

		
	Exemplo de código:
	import java.util.Scanner;

	public class forParaArray {
    
    public static void main(String[] args){
            int[] numero = new int[5];
            int soma=0;
            Scanner entrada = new Scanner(System.in);
            
            for(int cont=0 ; cont< numero.length ; cont++){
                System.out.print("Entre com o número "+(cont+1)+": ");
                numero[cont]=entrada.nextInt();
            }
            
            //exibindo e somando
            for(int cont : numero){
                soma += cont;
            }
            
            System.out.println("A soma dos números que você digitou é "+soma);
        }


	}

---- ARRAY MULTIDIMENSIONAL OU MATRIZ: ARRAY DE ARRAYS

	Sintaxe:
		tipo[][] nomeVariavel = new tipo[qnt][qnt];
		ou
		tipo[][] nomeVariavel = {{valor1, valor2}, {valor3, valor4}};
		
	Exemplo de código para percorrer:
		
        for(int linha=0 ; linha < 3 ; linha++){
            for(int coluna = 0; coluna < 2 ; coluna ++){
                System.out.printf("\t %d \t",matriz[linha][coluna]);
            }
            System.out.println();
        }
		

---- ARRAYS EM MÉTODOS: PASSAGEM POR VALOR E POR REFERÊNCIA
	
	PASSAGEM POR REFERÊNCIA
		Declarar o método:
			public static tipoRetorno nomeMetodo (tipo[] nomeVariavel){}
	
		Chamar o método:
			nomeMetodo (nomeVariavel);
	

---- CLASSE ARRAYS : COMO USAR

	Importando:
		import java.util.Arrays;
	
	-> ORDENANDO E BUSCANDO ELEMENTO:
	
		EXIBINDO o array em forma de String:
			Arrays.toString (nomeArray);
			
		ORDENANDO o Vetor de forma crescente:
			Arrays.sort (nomeArray);
		
		BUSCANDO elemento:
			Arrays.binarySearch(nomeArray, numeroProcurado);
				//só funciona em vetor ordenado
	
	
	-> MÉTODOS DA CLASSE ARRAYS
		
		Arrays.binarySearch:
			Serve para encontrar um elemento específico. Retorna a posição (inteiro)
			Sintaxe:
				Array.binarySearch (nomeArray, valor) //pesquisa em todo o vetor
					ou
				Array.binarySearch (nomeArray, daqui, ateAqui, valor);
					//pesquisa em um intervalo.
		
		
		Arrays.copyOf:
			Copia um array em outro.
			Sintaxe:
				novoArray[] = Arrays.copyOf(arrayOriginal, numero_de_elementos_copiar);
					ou
				novoArray[] = Arrays.copyOf(arrayOriginal, daqui, ate_aqui);
					//copiar um intervalo
		
		
		Arrays.equals:
			Recebe dois arrays e retorna true caso sejam iguais
		
		
		Arrays.fill:
			Preenche o array com determinado valor.
			Sintaxe:
				Arrays.fill (array, valor);
					ou
				Arrays.fill (array, daqui, ate_aqui, valor);
					//preencher um intervalo
		
		
		Arrays.sort:
			Ordena crescente o vetor.
			Sintaxe:
				Arrays.sort (array);
					ou
				Arrays.sort (array, daqui, ate_aqui);
		
		
		Arrays.toString:
			Retorna todos os elementos de um array na forma de String;
			Sintaxe:
				Arrays.toString (array);

				
	Documentação Classe Arrays: http://docs.oracle.com/javase/7/docs/api/java/util/Arrays.html	
				
				
---- COMO USAR ARRAYLIST EM JAVA
		São arrays mais flexíveis, ou seja, não estáticas e que permitem que sua 
	quantidade seja alterada.
	
	Declaração:
		Importe:
			import java.util.ArrayList;
		
		Sintaxe:
			ArrayList <Objeto> nomeDoArrayList = new ArrayList <Objeto>();
			
	Exemplo:
		ArrayList<String> bandas = new ArrayList<String> ();
		bandas.add ("Nome1"); //variavel.add adiciona algo a lista
		Arrays.toString (bandas.toArray()); //exibe a lista
		bandas.get(x); //pega quem está na posição x
		bandas.add (bandas.indexOf ("Rush"), "Tiririca"); //troca Rush por Tiririca	
		badas.size(); //retorna o número de elementos
		badas.remove("Tiririca"); //remove
		bandas.clear(); //Limpa toda a lista
	
	Documentação ArrayList: http://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html
		
		
		
		
	